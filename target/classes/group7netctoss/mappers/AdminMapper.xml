<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group7netctoss.dao.AdminDao">
	<sql id = "adminNum">a.admin_id,a.admin_name,a.admin_account,a.admin_tel,a.admin_photo,a.admin_email,a.admin_psw,a.admin_date</sql>
	<sql id = "adminAddNum">admin_name,admin_account,admin_tel,admin_photo,admin_email,admin_psw,admin_date</sql>
	<sql id = "roleNum">r.role_id,r.role_name</sql>
	<sql id = "powerNum">p.pow_id,p.pow_name,p.pow_url,p.pow_class</sql>
	
	<resultMap type="Admin" id="Admin">
		<id property="admin_id" column="admin_id" />
		<collection property="admin_role" select="group7netctoss.dao.RoleDao.roleByAdmin" column="admin_id">
			<id property="role_id" column="role_id"/>
			<result property="role_name" column="role_name"/>
		</collection>
	</resultMap>
	
	<select id="selAllAdmin" resultMap="Admin">
		select <include refid="adminNum" />
		from admin a
	</select>
	
	<select id="selAllAdminByLimit" resultMap="Admin">
		select <include refid="adminNum" />
		from admin a
		order by admin_id
		limit #{begin},#{size}
	</select>
	
	<select id="selAdminByid" resultMap="Admin">
		select <include refid="adminNum" />
		from admin a
		where a.admin_id=#{admin_id}
	</select>
	
	<delete id="delAdmin">
		delete from admin where admin_id=#{admin_id}
	</delete>
	
	<delete id="delRoleByAdmin">
		delete from admin_role where admin_id=#{admin_id}
	</delete>
	
	<update id="updAdmin">
		update admin set admin_name = #{admin_name},admin_tel=#{admin_tel},admin_email=#{admin_email} where admin_id=#{admin_id}
	</update>
	<insert id="addRoleByAdmin">
		insert into admin_role(admin_id,role_id) values(#{admin_id},#{role_id})
	</insert>
	
	<insert id="addAdmin" useGeneratedKeys="true" keyProperty="admin_id">
		insert into admin(<include refid="adminAddNum"></include>)
		values (#{admin_name},#{admin_account},#{admin_tel},#{admin_photo},#{admin_email},#{admin_psw},now())
	</insert>

	<select id="selAdminBy" resultMap="Admin" >
		select distinct <include refid="adminNum" />
		from admin a,admin_role ar,role r,role_powers pr 
		<where>
			<if test="role_name!=null and role_name!=''"> 			
				and ar.role_id=(select role_id from role where role_name like '%${role_name}%') and a.admin_id = ar.admin_id
			</if>
			<if test="pow_id!=0">
				and a.admin_id=ar.admin_id and pr.role_id=ar.role_id and pr.power_id=#{pow_id}
			</if>
		</where>
	</select>
	<!--管理员登录通过账户密码登录（返回管理员的信息，和角色集合，权限集合）-->
	<resultMap type="Admin" id="adminLogin">
		<id property="admin_account" column="admin_account"/>
		<id property="admin_psw" column="admin_psw"/>
		<result property="admin_id" column="admin_id"/>
		<result property="admin_name" column="admin_name"/>
		<result property="admin_tel" column="admin_tel"/>
	<!--<result property="admin_photo" column="admin_photo"/> -->
		<result property="admin_email" column="admin_email"/>
		<result property="admin_date" column="admin_date"/>
		<collection property="admin_role" ofType="group7netctoss.entity.Role">
			<result property="role_id" column="role_id"/>
			<result property="role_name" column="role_name"/>
		</collection>
		<collection property="admin_power" ofType="group7netctoss.entity.Power">
			<result property="pow_id" column="pow_id"/>
			<result property="pow_name" column="pow_name"/>
			<result property="pow_class" column="pow_class"/>
			<result property="pow_url" column="pow_url"/>
		</collection>
	</resultMap>
 	<select id="login" resultMap="adminLogin">
 		SELECT a.admin_id,a.admin_name,a.admin_account,a.admin_tel,a.admin_email,a.admin_psw,a.admin_date,
 			<include refid="roleNum"></include>,<include refid="powerNum"></include>
		FROM admin a JOIN admin_role ar JOIN role r JOIN role_powers rp JOIN powers p 
			ON a.admin_id=ar.admin_id AND ar.role_id=r.role_id AND r.role_id=rp.role_id AND rp.power_id=p.pow_id
		WHERE a.admin_account = #{admin_account} AND a.admin_psw = #{admin_psw}    
 	</select>
 	
 	<!--通过id修改管理员个人信息（姓名，电话，邮箱）） -->
 	<update id="updateAdminInfo">
		UPDATE admin SET 
			admin_name = #{admin_name},
			admin_tel = #{admin_tel},
			admin_email = #{admin_email} 
		WHERE admin_id = #{admin_id}
	</update>
	
	<!--修改管理员密码 -->
 	<update id="updateAdminPsw">
 		UPDATE admin 
 		SET admin_psw = #{admin_psw} 
 		where admin_id = #{admin_id}
 	</update>
 	
 	<select id="selAdminCount" resultType="java.lang.Integer">
		select count(admin_id)
		from admin r
	</select>
</mapper>