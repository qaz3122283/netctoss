<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:aop="http://www.springframework.org/schema/aop"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
					 http://www.springframework.org/schema/beans/spring-beans.xsd
					 http://www.springframework.org/schema/tx
       				 http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
					 http://www.springframework.org/schema/aop
					 http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
					 http://www.springframework.org/schema/context
        			 http://www.springframework.org/schema/context/spring-context-4.1.xsd">
    <!-- 自动扫描支持注解方式，自动装配bean -->    			 
	<context:component-scan base-package="group7netctoss.dao"></context:component-scan>
	<context:component-scan base-package="group7netctoss.service"></context:component-scan>
	
	<!-- 引入jdbc配置文件 -->
 	<context:property-placeholder location="classpath:jdbc.properties"/>
 	<!-- 配置jbdc数据源 -->
 	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
 		<property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
 	</bean> -->
 	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
 		<property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
 	</bean>
 	<!-- 使用jdbc数据源配置事务管理器 -->
 	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置事务管理通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="new*" propagation="REQUIRED" />  
            <tx:method name="set*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" />  
            <tx:method name="del*" propagation="REQUIRED" />  
            <tx:method name="change*" propagation="REQUIRED" />  
            <tx:method name="open*" propagation="REQUIRED" /> 
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" read-only="true" />  
        </tx:attributes>  
    </tx:advice>
    <!-- 为事务管理器设置切面 -->
    <aop:config>
    	<aop:pointcut expression="execution(* group7netctoss.service.*.*(..))" id="ser"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="ser"/>
    </aop:config>
    <!-- 整合mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"></property>
    	<!-- 自动扫描mappers.xml文件 -->
    	<property name="mapperLocations" value="classpath:group7netctoss/mappers/*.xml"></property>
    	<!-- 加载mabatis配置文件 -->
    	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!-- 自动向所有的dao层文件中注入sqlsession -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="group7netctoss.dao"></property>
    	<property name="SqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
</beans>