package group7netctoss.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import group7netctoss.dao.RoleDao;
import group7netctoss.entity.Admin;
import group7netctoss.entity.Role;
import group7netctoss.service.AdminService;
import group7netctoss.service.RoleService;


@Controller
@RequestMapping("/admin")
public class AdminController {
		
	@Resource
	private AdminService adminService;
	@Resource
	private RoleService roleService;
		
	@RequestMapping("/adminList.do")
	public String getAllAdmin(HttpServletRequest request){
		List<Admin> la = adminService.getAllAdmin();
		request.setAttribute("allAdmin_list",la);		
		return "view/admin/admin_list";		
	}
	@RequestMapping("/adminModi.do")
	public String changeAdmin(HttpServletRequest request){
		Admin admin = new Admin();
		admin.setAdmin_id(Integer.parseInt(request.getParameter("admin_id")));
		Admin a = adminService.getAdminById(admin);
		request.setAttribute("admin",a);
		
		List<Role> role= roleService.getAllRole();
		request.setAttribute("role",role);
		return "view/admin/admin_modi";
	}
	/**
	 * 动态获取所有Role
	 * @param request
	 * @return
	 */
	@RequestMapping("/getRole.do")
	public String getRole(HttpServletRequest request){
		List<Role> role= roleService.getAllRole();
		request.setAttribute("role",role);
		return "view/admin/admin_add";
	}
	@RequestMapping("/adminUpdate.do")
	public String adminUpdate(HttpServletRequest request){
		int id = Integer.parseInt(request.getParameter("id"));
		String name = request.getParameter("name");
		String tel = request.getParameter("tel");
		String email = request.getParameter("email");
		String[] rol = request.getParameterValues("rol");
		
		List<Role> lr = new ArrayList<Role>();
		for(int i =0;i<rol.length;i++){
			int rol_id = Integer.parseInt(rol[i]);
			Role role = new Role();
			role.setRole_id(rol_id);
			lr.add(role);
		}
		Admin admin = new Admin();
		admin.setAdmin_id(id);
		admin.setAdmin_name(name);
		admin.setAdmin_tel(tel);
		admin.setAdmin_email(email);
		admin.setAdmin_role(lr);
		int i = adminService.updateAdmin(admin);
		return "forward:/admin/adminList.do";
	}
	
	@RequestMapping("/adminAdd.do")
	public String addAdmin(MultipartFile file,HttpServletRequest request){
		String name = request.getParameter("name");
		String username = request.getParameter("username");
		String psw = request.getParameter("psw");
		
		String tel = request.getParameter("tel");
		String email = request.getParameter("email");
		//上传文件
		/**得到图片保存目录的真实路径**/
		String path=request.getServletContext().getRealPath("/");
		String img = request.getParameter("userimg");
				
		
		String[] rol = request.getParameterValues("rol");
		List<Role> roles = new ArrayList<Role>();
		for(int i=0;i<rol.length;i++){
			int rol_id = Integer.parseInt(rol[i]);
			Role r = new Role();
			r.setRole_id(rol_id);
			roles.add(r);
		}
		
		Admin admin = new Admin();
		admin.setAdmin_name(name);
		admin.setAdmin_account(username);
		admin.setAdmin_psw(psw);
		admin.setAdmin_photo(img);
		admin.setAdmin_tel(tel);
		admin.setAdmin_email(email);
		admin.setAdmin_role(roles);
		
		int i = adminService.insertAdmin(admin);
		return "forward:/admin/adminList.do";
	}
	
	@RequestMapping("/adminDelete.do")
	public String deleteAdmin(HttpServletRequest request){
		int adm_id =  Integer.parseInt(request.getParameter("adm_id"));
		Admin admin  = new Admin();
		admin.setAdmin_id(adm_id);
		int i = adminService.delAdmin(admin);
		return "forward:/admin/adminList.do";
	}
	
	@RequestMapping("/adminListBy.do")
	public String selAdminBy(HttpServletRequest request){
		int per = Integer.parseInt(request.getParameter("per"));
		String rol_name = request.getParameter("rolename");
		System.out.println(rol_name);
		List<Admin> la = adminService.getAdminBy(per,rol_name);
		request.setAttribute("allAdmin_list",la);
		return "forward:/admin/adminList.do";
	}
	//处理管理员登录
		@RequestMapping("/login.do")
		public String login(@RequestParam("admin_account")String admin_account,
							@RequestParam("admin_psw")String admin_psw,
							HttpServletRequest request,
							HttpSession session){
			Admin adminLogin = adminService.login(new Admin(admin_account,admin_psw));
			if(adminLogin.getAdmin_id()!=0){	
				session.setAttribute("admin", adminLogin);
				return "view/index";	
			}else{
				request.setAttribute("errorMsg", "您输入的账号和密码不匹配，请重新输入！");
				return "redirect:../login.jsp";
			}
		}
		//处理管理员修改信息（姓名，电话，email）
			@RequestMapping("/modifyAdminInfo.do")
			public String ModifyAdminInfo(@RequestParam("admin_id")String admin_id,
										@RequestParam("admin_name")String admin_name,
										@RequestParam("admin_email")String admin_email,
										@RequestParam("admin_tel")String admin_tel,
										Model model){
				Admin adminModi = new Admin(Integer.parseInt(admin_id),admin_name,admin_tel,admin_email);
				int m = adminService.modifyAdminInfo(adminModi);
				if(m>=0){
					model.addAttribute("adminModi", adminModi);
					model.addAttribute("msg", 1);//1表示修改信息成功
				}else{
					model.addAttribute("msg", 0);//0表示修改信息失败
				}
				return "view/user/user_info"; 
			}
			//处理管理员修改密码
			@RequestMapping("/modifyAdminPsw.do")
			public String ModifyAdminPsw(@RequestParam("admin_id")String admin_id,
										@RequestParam("newpsw1")String admin_psw,
										Model model
										){
				int m = adminService.modifyAdminPsw(new Admin(Integer.parseInt(admin_id),admin_psw));
				if(m>=0){
					model.addAttribute("successMsg", "修改密码成功,进入登录界面！");
					return "redirect:/view/login.jsp";	
				}else{
					model.addAttribute("failMsg", "对不起，修改密码失败！");
					return "redirect:/view/user/user_modi_pwd.jsp";
				}
			}
}
